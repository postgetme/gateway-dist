module.exports=function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}return s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s(s.s=15)}([function(e,t){e.exports=require("child_process")},function(e,t,s){const i=s(21)(new(s(22))("/etc/gateway.conf"));i.defaults({state:"offline",config:{},nets:{defaultGateway:"eth0",wlan0:{connect:!1},ppp0:{enable:!1}},access:{server:"",accessCode:"",key:"",cert:"",ca:""}}).write(),e.exports={db:i,setDefault:function(){i.set("state","offline").set("config",{}).set("nets",{defaultGateway:"eth0",wlan0:{connect:!1},ppp0:{enable:!1}}).set("access",{server:"",accessCode:"",key:"",cert:"",ca:""}).write()},getState:function(){return i.get("state").value()},getAccess:function(){return i.get("access").value()},getConfig:function(){return i.get("config").value()},setState:function(e){return i.set("state",e).write()},setAccess:function(e){return i.set("access",e).write()},setConfig:function(e){return i.set("config",e).write()}}},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("debug")},function(e,t){e.exports=require("bluebird")},function(e,t){e.exports=require("systeminformation")},function(e,t){e.exports=require("guige-modbus-utils")},function(e,t){e.exports=require("h5.modbus")},function(e,t){e.exports=require("fs")},function(e,t,s){const i=s(0).execSync;var n=s(24);var o=s(4).promisify(n.get_interfaces_list),a=s(25).Netmask;const r={dhcp:!1,ip:"",mask:"",gateway:""};async function l(){let e=(await o()).filter(e=>"eth0"==e.name)[0];r.ip=e.ip_address,r.mask=e.netmask,r.gateway=e.gateway_ip}l(),e.exports={info:r,set:async function(e,t,s){var n=new a(`${e}/${t}`);return i(`nmcli connection modify 'Wired connection 1' ipv4.address ${e}/${n.bitmask} ipv4.gateway ${s}`),i("nmcli con down 'Wired connection 1'"),i("nmcli con up 'Wired connection 1'"),await l(),r}}},function(e,t,s){const i=s(0).execSync,n=s(26),o=s(5),{db:a}=s(1),r={exist:!1,connect:!1,networks:[],currentConnections:[],ip:""};function l(){try{return i("nmcli device disconnect wlan0")}catch(e){}}!async function(){if(r.exist=-1!=i("nmcli dev").indexOf("wlan0"),r.exist){n.init({iface:null}),r.connect=a.get("nets.wlan0.connect").value(),r.connect||l();try{r.networks=await n.scan(),r.currentConnections=await n.getCurrentConnections();let e=(await o.networkInterfaces()).filter(e=>"wlan0"==e.iface)[0];e&&(r.ip=e.ip4)}catch(e){console.log("wifi init error:",e)}}}(),e.exports={info:r,scan:n.scan,connect:n.connect,disconnect:l,getCurrentConnections:n.getCurrentConnections}},function(e,t,s){const i=s(0).execSync,n=s(0).execFile,o=s(4),a=s(27),{db:r}=s(1),l=new a("/dev/ttyUSB2"),c=s(5),u={enable:!1,exist:!1,simReady:!1,ccid:"",imsi:"",apn:"",operator:"",rssi:0,signalLevel:0,ip:""},d={cmnet:"中国移动",wonet:"中国联通",ctnet:"中国电信"},p={46e3:"cmnet",46002:"cmnet",46004:"cmnet",46007:"cmnet",46001:"wonet",46006:"wonet",46009:"wonet",46003:"ctnet",46005:"ctnet",46011:"ctnet"};let f=!1;async function h(){const e=await l.at("AT+CSQ");f||(console.log("AT+CSQ result:",e),f=!0);try{return parseInt(e.split(" ")[1].split(",")[0])}catch(e){return 0}}async function g(){let e=await c.networkInterfaces();u.ip=e.filter(e=>"ppp0"==e.iface)[0].ip4,console.log("modem info:\n",u)}let m=!0;async function v(){if(m&&(await o.delay(15e3),m=!1),console.log("modem info:\n",u),u.exist&&u.enable&&u.simReady&&99!=u.rssi){if(console.log("dial with apn:",u.apn),u.apn){n("../ppp/pppd.sh",["/dev/ttyUSB3",u.apn]);for(let e=0;e<3;e++)if(await o.delay(5e3),-1!=i("ifconfig").indexOf("ppp0")){console.log("dial ok"),await g();break}let e=r.get("nets.defaultGateway").value();console.log("default gateway:",e),"ppp0"==e?(console.log(`route add default gw ${u.ip}`),i(`route add default gw ${u.ip}`)):console.log(`skip route add default gw ${u.ip}`)}}else console.log("skip dial")}console.log("\n********** Modem init **********"),i("systemctl stop ModemManager"),async function(){for(await l.open(),u.exist=-1!=i("ls /dev/ttyUSB0").indexOf("/dev/ttyUSB0"),u.enable=r.get("nets.ppp0.enable").value(),u.simReady=await async function(){const e=await l.at("AT+CPIN?");return console.log("AT+CPIN? result:",e),-1!=e.indexOf("READY")}(),u.ccid=await async function(){const e=await l.at("AT+CCID");return console.log("AT+CCID result:",e),e.split("\n")[0].split(" ")[1]}(),u.imsi=await async function(){const e=await l.at("AT+CIMI");return console.log("AT+CIMI result:",e),e.match(/\d+/)[0]}(),u.apn=p[u.imsi.substr(0,5)],u.operator=d[u.apn];u.exist&&u.enable&&u.simReady;){if(u.rssi=await h(),99==u.rssi)u.signalLevel=0;else{let e=2*u.rssi-113;e>=-85?u.signalLevel=5:e<-85&&e>=-90?u.signalLevel=4:e<-90&&e>=-95?u.signalLevel=3:e<-95&&e>=-100?u.signalLevel=2:e<-100&&e>=-105?u.signalLevel=1:e<-105&&(u.signalLevel=0)}await o.delay(5e3)}}(),v(),e.exports={info:u,dial:v,kill:function(){n("../ppp/kill.sh")}}},function(e,t){e.exports={}},function(e,t,s){"use strict";s.r(t);const i=s(3)("ModbusAgent"),n=s(51),o=s(52),a=s(6),r=s(4),l=s(53),c=s(54),u=i.extend("tcp"),d=i.extend("rtu"),p={pollInterval:500,pollTimeout:500,offlineRetries:3,cacheMinutes:5};t.default=class extends n{constructor(e,t,s,i=[],n={}){super(),this.type=e,this.mqttClient=t,this.mqttMessageHandles=s,this.devices=i,this.options=Object.assign({},p,n),this.pollTable=[],this.controlTable=[],this.pollStop=!1,this.cache=new c.Cache,this.lock=new l,this.offlineCounters={},this.modbusClient=new o,"tcp"==this.type?this.modbusClient.setTimeout(Math.max(100,this.options.pollTimeout,2*this.options.pollInterval)):this.modbusClient.setTimeout(this.options.pollTimeout)}_modbusClientWrite(e){let t=null;switch("tcp"==this.type?(t=void 0===e.value?{createdAt:new Date,log:`> ip:${e.ip}, port:${e.port}, unitID:${e.unitID}, functionCode:${e.fc}, address:${e.address}, length:${e.quantity}`}:{createdAt:new Date,log:`> ip:${e.ip}, port:${e.port}, unitID:${e.unitID}, functionCode:${e.fc}, address:${e.address}, length:${e.quantity}, value:${e.value}`},this.logger("info",t),this.modbusClient.setID(e.unitID)):(t=void 0===e.value?{createdAt:new Date,log:`> slaveId:${e.slaveId}, functionCode:${e.fc}, address:${e.address}, length:${e.quantity}`}:{createdAt:new Date,log:`> slaveId:${e.slaveId}, functionCode:${e.fc}, address:${e.address}, length:${e.quantity}, value:${e.value}`},this.logger("info",t),this.modbusClient.setID(e.slaveId)),6==e.fc&&Array.isArray(e.value)&&(e.fc=16),e.fc){case 1:return this.modbusClient.readCoils(e.address,e.quantity);case 2:return this.modbusClient.readDiscreteInputs(e.address,e.quantity);case 3:return this.modbusClient.readHoldingRegisters(e.address,e.quantity);case 4:return this.modbusClient.readInputRegisters(e.address,e.quantity);case 5:return this.modbusClient.writeCoil(e.address,e.value);case 6:return this.modbusClient.writeRegister(e.address,e.value);case 15:return this.modbusClient.writeCoils(e.address,e.value);case 16:return this.modbusClient.writeRegisters(e.address,e.value)}}logger(e,t){"tcp"==this.type?u(t.log):d(t.log),this.emit("log",{level:e,log:t})}stop(){this.pollStop||("tcp"==this.type?u(`stop ${this.devices[0].ip}:${this.devices[0].port}`):d("stop"),this._unbind(),this.modbusClient.close(),this.pollStop=!0)}async _poll(){for(;!this.pollStop;)await this._pollTable(this.pollTable),this.options.pollInterval&&await r.delay(this.options.pollInterval)}_publish(e,t){i("publish:",e,t),this.mqttClient.publish(e,JSON.stringify({value:t,date:Date.now()}),{qos:1},s=>{s?i(s.message):i("published:",e,t)})}_publishData(e,t,s){s?this._publish(e,t):this.cache.get(e)!=t&&(this.cache.put(e,t,6e4*this.options.cacheMinutes),this._publish(e,t))}_publishState(e,t){let s=`${e.deviceAccessCode}/_state`;if(0==t){if(void 0===this.offlineCounters[s]?this.offlineCounters[s]=1:this.offlineCounters[s]++,this.offlineCounters[s]<this.options.offlineRetries)return;i(`${this.options.offlineRetries} times offline`)}else this.offlineCounters[s]=0;this._publishData(s,t),this.emit("state",{deviceId:e.deviceId,state:t})}_publishMessage(e,t,s){this._publishData(`${e.userId}/_message`,{type:t?"success":"error",message:t?"操作成功":`操作失败：${s}`,id:e.variables[0].id,name:e.variables[0].name,value:e.value,unit:e.variables[0].unit,deviceId:e.variables[0].deviceId,deviceCode:e.variables[0].deviceCode,deviceType:e.variables[0].deviceType,deviceNote:e.variables[0].deviceNote,createdAt:new Date},!0)}_bind(){this.controlTable.forEach(e=>{let t=`${e.variables[0].id}`;this.mqttClient.subscribe(t);let s=e;this.mqttMessageHandles[t]=t=>{s.frame.value=a.parseWrite(e,t.value),s.value=t.value,s.userId=t.userId,this._set(s)}})}_unbind(){this.controlTable.forEach(e=>{let t=`${e.variables[0].id}`;this.mqttClient.unsubscribe(t),this.mqttMessageHandles[t]=null})}_set(e){this.lock.acquire("port",()=>this._modbusClientWrite(e.frame),{}).then(t=>{this.logger("info",{createdAt:new Date,log:`< ${JSON.stringify(t)}`}),this._publishMessage(e,!0),"tcp"==this.type?this._pollTable(this.pollTable.filter(t=>t.frame.unitID==e.frame.unitID)):this._pollTable(this.pollTable.filter(t=>t.frame.slaveId==e.frame.slaveId))}).catch(t=>{this._publishMessage(e,!1,t.message),this.logger("error",{createdAt:new Date,log:`error: ${t.message}`})})}}},function(e,t,s){const i=s(7),n=i.ExceptionCode,o=i.FunctionCode;e.exports=function(e,t){const s=e,i={[o.ReadCoils]:"coils",[o.ReadDiscreteInputs]:"discreteInputs",[o.ReadHoldingRegisters]:"holdingRegisters",[o.ReadInputRegisters]:"inputRegisters",[o.WriteSingleCoil]:"coils",[o.WriteSingleRegister]:"holdingRegisters",[o.WriteMultipleCoils]:"coils",[o.WriteMultipleRegisters]:"holdingRegisters"},a={[o.ReadCoils]:function(e,t,s,i){r(t,s,i)},[o.ReadDiscreteInputs]:function(e,t,s,i){r(t,s,i)},[o.ReadHoldingRegisters]:function(e,t,s,i){l(t,s,i)},[o.ReadInputRegisters]:function(e,t,s,i){l(t,s,i)},[o.WriteSingleCoil]:function(e,s,i,o){t({slaveId:e,fc:s.functionCode,address:s.address,quantity:1,value:s.state},(e,t)=>{e?(debug("externalSet error:",e),o(n.SlaveDeviceFailure)):o(s)})},[o.WriteSingleRegister]:function(e,t,s,i){i(n.IllegalFunctionCode)},[o.WriteMultipleCoils]:function(e,t,s,i){i(n.IllegalFunctionCode)},[o.WriteMultipleRegisters]:function(e,t,s,i){i(n.IllegalFunctionCode)}};return function(e,t,o){const r=s[e];r?function(e,t,s,o){i[t.functionCode]?function(e,t,s,o){const r=s[i[t.functionCode]]||null;null===r?o(n.IllegalFunctionCode):a[t.functionCode](e,t,r,o)}(e,t,s,o):function(e,t,s,i){i(n.IllegalFunctionCode)}(0,0,0,o)}(e,t,r,function(e){o(e)}):o(n.IllegalDataAddress)};function r(e,t,s){c(t,e=>({states:e}),e.startingAddress,e.endingAddress,s)}function l(e,t,s){c(t,e=>({data:e}),e.startingIndex,e.endingIndex,s)}function c(e,t,s,i,o){s>=e.length||i>e.length?o(n.IllegalDataAddress):o(t(e.slice(s,i)))}}},function(e,t,s){e.exports=s(16)},function(e,t,s){console.log("\n******************************"),console.log("Gateway start"),console.log("******************************");const i=s(17);i.init(),s(18),s(19),s(23),s(9),s(10),s(11),setTimeout(()=>{i.sync(),s(28),s(42)},3e4)},function(e,t,s){const i=s(0).execSync;function n(){try{i("ntpdate -u cn.pool.ntp.org && hwclock -w -f /dev/rtc-ds1307"),console.log("sync time ok, date: ",i("date").toString())}catch(e){console.log("sync time error:",e.message)}}e.exports={init:function(){i("hwclock -s -f /dev/rtc-ds1307"),setInterval(n,6e5)},sync:n,set:function(){}}},function(e,t,s){const i=s(0).execSync;setInterval(()=>{i("echo 1 > /dev/watchdog")},1e3)},function(e,t,s){const i=s(0).execSync,n=s(4),o=s(20);let a=0,r=500,l=!0;!function(){try{i("echo 6 > /sys/class/gpio/export"),i("echo out > /sys/class/gpio/gpio6/direction")}catch(e){}try{i("echo 7 > /sys/class/gpio/export"),i("echo in > /sys/class/gpio/gpio7/direction")}catch(e){}}(),async function(){for(;;)i("echo 1 > /sys/class/gpio/gpio6/value"),await n.delay(r),i("echo 0 > /sys/class/gpio/gpio6/value"),await n.delay(r)}(),async function(e){for(;l;){let e=i("cat /sys/class/gpio/gpio7/value");await n.delay(1e3),"0"==String.fromCharCode(e[0])?a++:a=0,a>=5?(r=50,l=!1,setTimeout(()=>{o()},3e3)):r=500}}()},function(e,t,s){const i=s(0).execSync,{setDefault:n}=s(1);e.exports=function(){i("echo 0 > /sys/class/gpio/gpio6/value"),n();try{i("nmcli connection modify 'Wired connection 1' ipv4.address 192.168.0.99/24 ipv4.gateway 192.168.0.1"),i("nmcli device disconnect wlan0")}catch(e){console.log("reset error:",e.message)}i("reboot")}},function(e,t){e.exports=require("lowdb")},function(e,t){e.exports=require("lowdb/adapters/FileSync")},function(e,t,s){fs=s(8);fs.writeFileSync("/etc/resolv.conf","nameserver 8.8.8.8\nnameserver 8.8.4.4\n")},function(e,t){e.exports=require("network")},function(e,t){e.exports=require("netmask")},function(e,t){e.exports=require("node-wifi")},function(e,t){e.exports=require("serial-at")},function(e,t,s){const i=s(2),n=s(29),o=s(30),a=s(31),r=s(32),l=s(33),c=s(34),u=s(35),d=s(36),p=s(38),f=s(39),h=s(40),g=i();g.use(n()),g.use(o()),g.use(a.json()),g.use("/",i.static("../web")),g.use("/date",r),g.use("/state",l),g.use("/states",c),g.use("/config",u),g.use("/nets",d),g.use("/access",p),g.use("/cache",f),g.use("/usage",h);let m=8e3;m=80,g.listen(m,function(){console.log(`\n********** WebServer is running on port ${m} **********`)}),e.exports=g},function(e,t){e.exports=require("compression")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("body-parser")},function(e,t,s){var i=s(2).Router();i.get("/",(e,t)=>{t.json({date:(new Date).toISOString()})}),e.exports=i},function(e,t,s){var i=s(2).Router(),{getState:n}=s(1);i.get("/",(e,t)=>{t.json(n())}),e.exports=i},function(e,t,s){var i=s(2).Router(),n=s(12);i.get("/",(e,t)=>{t.json(n)}),e.exports=i},function(e,t,s){var i=s(2).Router(),{getConfig:n}=s(1);i.get("/",(e,t)=>{t.json(n())}),e.exports=i},function(e,t,s){var i=s(2).Router(),n=s(5),{db:o}=s(1),a=s(9),r=s(10),l=s(11),c=s(37);i.get("/",(e,t)=>{t.json({defaultGateway:o.get("nets.defaultGateway").value(),eth0:a.info,wlan0:r.info,ppp0:l.info})}),i.post("/eth0",async(e,t,s)=>{try{let{dhcp:i,ip:n,mask:o,gateway:r,dns1:l,dns2:c}=e.body;t.json(await a.set(n,o,r)),s()}catch(e){s(e.message)}}),i.post("/wlan0-scan",async(e,t,s)=>{try{r.info.networks=await r.scan(),t.json(r.info.networks),s()}catch(e){s(e.message)}}),i.post("/wlan0-connect",async(e,t,s)=>{let{ssid:i,password:a}=e.body;try{await r.connect({ssid:i,password:a});let e=await r.getCurrentConnections();r.info.currentConnections=e;let l=(await n.networkInterfaces()).filter(e=>"wlan0"==e.iface)[0].ip4;r.info.ip=l,o.set("nets.wlan0.connect",!0).write(),r.info.connect=!0,t.json({currentConnections:e,ip:l,connect:!0}),s()}catch(e){s(e.message)}}),i.post("/wlan0-disconnect",(e,t,s)=>{try{r.disconnect(),r.info.currentConnections=[],r.info.ip="",o.set("nets.wlan0.connect",!1).write(),r.info.connect=!1,t.json({currentConnections:[],ip:"",connect:!1}),s()}catch(e){s(e.message)}}),i.post("/ppp0",(e,t)=>{let{enable:s}=e.body;s?(o.set("nets.ppp0.enable",!0).write(),l.info.enable=!0,l.dial(),setTimeout(()=>{t.json(l.info)},8e3)):(o.set("nets.ppp0.enable",!1).write(),l.info.enable=!1,l.kill(),setTimeout(()=>{t.json(l.info)},2e3))}),i.post("/default-gateway",(e,t)=>{let{defaultGateway:s}=e.body;o.set("nets.defaultGateway",s).write(),c.setDefaultGateway(s),t.json({defaultGateway:s})}),e.exports=i},function(e,t){e.exports={setDefaultGateway:function(e){console.log("setDefaultGateway",e)},adjustDefaultGateway:function(){}}},function(e,t,s){var i=s(2).Router(),{getAccess:n,setAccess:o}=s(1);i.get("/",(e,t)=>{t.json(n())}),i.post("/",(e,t)=>{var s=Object.assign({},n(),e.body);o(s),t.json(n())}),e.exports=i},function(e,t,s){var i=s(8),n=s(0).execSync,o=s(2).Router(),a="/root/.gateway-store/outgoing";o.get("/",(e,t)=>{try{var s=n(`grep -v \\$\\$deleted ${a} | wc -l`).toString(),o=n(`grep \\$\\$deleted ${a} | wc -l`).toString(),r=i.statSync(a);t.json({count:s-o,size:r.size})}catch(e){t.end()}}),e.exports=o},function(e,t,s){var i=s(2).Router(),n=s(5),o=s(41);i.get("/",async(e,t,s)=>{try{var i=await n.cpuTemperature(),a=await n.currentLoad(),r=await n.mem(),l=await o("/");t.json({temp:i.main,uptime:n.time().uptime,load:a.currentload,memory:r,disk:{total:l.size,free:l.free}}),s()}catch(e){s(e.message)}}),e.exports=i},function(e,t){e.exports=require("check-disk-space")},function(e,t,s){var i=s(3)("Agent"),n=s(43),{getAccess:o}=s(1),a={},r=null;function l(){var e=o();JSON.stringify(e)!=JSON.stringify(a)&&(i("获取到新的接入信息",JSON.stringify(e,null,2)),a=e,r&&r.stop(),setTimeout(()=>{(r=new n(e)).start()},5e3))}l(),setInterval(l,5e3)},function(e,t,s){var i=s(3)("Agent"),n=s(44),o=s(45),a=s(46),r=s(47),l=s(48),c=s(49),u=s(50).default,d=s(55).default,p=s(56).default,{getConfig:f,setConfig:h,setState:g}=(s(58).default,s(1)),m=s(12),v=l.get("appId"),b=a("/root/.gateway-store",{outgoing:{autocompactionInterval:6e4}});function y(e){m[e.deviceId]=e.state}e.exports=class{constructor(e){this.access=e,this.checkTimer=null,this.modbusTcpAgents=[],this.modbusRtuAgent=null,this.modbusRtuSlave=null,this.modbusTcpSlave=null,this.oldGatewayConfigString=null,this.oldModbusTcpDevicesConfigString=null,this.oldModbusRtuDevicesConfigString=null,c().test(e.server)?(this.appServer=`https://${e.server}/api`,this.mqttServer=`mqtt://${e.server}:1883`):(this.appServer=`http://${e.server}/api`,this.mqttServer=`mqtt://${e.server}:1883`),n.initialize(v,""),n.serverURL=this.appServer,this.mqttMessageHandles={},this.mqttClient=o.connect(this.mqttServer,{clientId:`${e.accessCode}:gateway`,incomingStore:b.incoming,outgoingStore:b.outgoing}),this.mqttClient.on("message",(e,t)=>{if(this.mqttMessageHandles[e])try{this.mqttMessageHandles[e](JSON.parse(t.toString()))}catch(e){i(e.message)}}),this.mqttClient.on("error",e=>{i("mqttClient error:",e)}),this.mqttClient.on("offline",()=>{i("mqttClient offline")}),this.mqttClient.on("close",()=>{i("mqttClient close")}),this.mqttClient.on("end",()=>{i("mqttClient end")}),this.mqttClient.on("connect",()=>{i("mqttClient connect")}),this.mqttClient.on("reconnect",()=>{i("mqttClient reconnect")}),this.mqttClient.on("disconnect",()=>{i("mqttClient disconnect")})}_modbusTcp(e){if(this._isNewModbusTcpDevicesConfig(e)){i("获取到新的 Modbus TCP 设备配置");for(let t=0;t<e.modbusTcpDevices.length;t++)this.modbusTcpAgents[t]&&this.modbusTcpAgents[t].stop(),setTimeout(()=>{this.modbusTcpAgents[t]=new u(this.mqttClient,this.mqttMessageHandles,[e.modbusTcpDevices[t]],{pollInterval:parseInt(e.modbusTcpPollInterval),pollTimeout:parseInt(e.modbusTcpPollTimeout)}),this.modbusTcpAgents[t].on("state",y),this.modbusTcpAgents[t].start()},3e3)}}_modbusRtu(e){this._isNewModbusRtuDevicesConfig(e)&&(i("获取到新的 Modbus RTU 设备配置"),this.modbusRtuAgent&&this.modbusRtuAgent.stop(),this.modbusRtuSlave&&this.modbusRtuSlave.stop(),setTimeout(()=>{this.modbusRtuAgent=new d(this.mqttClient,this.mqttMessageHandles,e.modbusRtuDevices,{baud:parseInt(e.modbusRtuBaud),pollInterval:parseInt(e.modbusRtuPollInterval),pollTimeout:parseInt(e.modbusRtuPollTimeout),unitDataEnable:!0}),this.modbusRtuAgent.on("state",y),this.modbusRtuAgent.start(),this.modbusRtuSlave=new p(this.modbusRtuAgent.unitData,this.modbusRtuAgent.externalSet,{baud:parseInt(e.modbusRtuBaud)}),this.modbusRtuSlave.start()},3e3))}_check(){var e;(e=this.access.accessCode,n.Cloud.run("getGatewayConfig",{accessCode:e}).then(e=>(g("online"),Promise.resolve({config:e,state:"online"}))).catch(e=>100==e.code?(g("offline"),Promise.resolve({config:f(),state:"offline"})):(i(e.message),g("invalid accessCode"),Promise.resolve({config:{},state:"invalid accessCode"})))).then(({config:e,state:t})=>{!r.isEmpty(e)&&this._isNewGatewayConfig(e)&&("online"==t?(i("获取到新的服务器端网关配置"),h(e)):i("连接服务器失败，使用本地网关配置"),this._modbusTcp(e),this._modbusRtu(e))})}start(){i("start"),this._check(),this.checkTimer=setInterval(this._check.bind(this),3e4)}stop(){i("stop"),clearInterval(this.checkTimer),this.mqttClient.end(),this.modbusTcpAgents.forEach(e=>{e&&e.stop()}),this.modbusRtuAgent&&this.modbusRtuAgent.stop(),this.modbusRtuSlave&&this.modbusRtuSlave.stop()}_isNewGatewayConfig(e){var t=function(e){return JSON.stringify(e)}(e);return t!=this.oldGatewayConfigString&&(this.oldGatewayConfigString=t,!0)}_isNewModbusTcpDevicesConfig(e){var t=function(e){var t=JSON.stringify(e.modbusTcpDevices.map(e=>r.pick(e,["ip","port","table"])));return t+=`${e.modbusTcpPollInterval}-${e.modbusTcpPollTimeout}`}(e);return t!=this.oldModbusTcpDevicesConfigString&&(this.oldModbusTcpDevicesConfigString=t,!0)}_isNewModbusRtuDevicesConfig(e){var t=function(e){var t=JSON.stringify(e.modbusRtuDevices.map(e=>r.pick(e,["slaveId","baud","table"])));return t+=`${e.modbusRtuBaud}-${e.modbusRtuPollInterval}-${e.modbusRtuPollTimeout}`}(e);return t!=this.oldModbusRtuDevicesConfigString&&(this.oldModbusRtuDevicesConfigString=t,!0)}}},function(e,t){e.exports=require("parse/node")},function(e,t){e.exports=require("mqtt")},function(e,t){e.exports=require("mqtt-nedb-store")},function(e,t){e.exports=require("lodash")},function(e,t){e.exports=require("config")},function(e,t){e.exports=require("domain-regex")},function(e,t,s){"use strict";s.r(t);const i=s(3)("ModbusTcpAgent"),n=s(13).default,o=s(6);t.default=class extends n{constructor(e,t,s=[],i={}){super("tcp",e,t,s,i)}async start(){try{await this.modbusClient.connectTCP(this.devices[0].ip,{port:this.devices[0].port,timeout:this.options.pollTimeout}),i(`connect ${this.devices[0].ip}:${this.devices[0].port} ok`)}catch(e){i(`connect ${this.devices[0].ip}:${this.devices[0].port} fail`)}try{let{pollTable:e,controlTable:t}=o.parseDevicesWithUnitID(this.devices);this.pollTable=e,this.controlTable=t}catch(e){return void i("parse devices error:",e.message)}this.pollTable.length&&(i(`start ${this.devices[0].ip}:${this.devices[0].port}`),this._poll()),this.controlTable.length&&this._bind()}async _pollTable(e){for(let t=0;t<e.length;t++){let s=e[t];try{let e=await this.lock.acquire("port",()=>this._modbusClientWrite(s.frame),{});o.parseRead(s,e).forEach(e=>{this._publishData(e.id,e.value)}),this._publishState(s.frame,!0),this.logger("info",{createdAt:new Date,log:`< ${e.buffer.toString("hex")}`})}catch(e){if(this._publishState(s.frame,!1),this.logger("error",{createdAt:new Date,log:`error: ${e.message||e}`}),"Port Not Open"==e.message)try{await this.modbusClient.connectTCP(this.devices[0].ip,{port:this.devices[0].port,timeout:this.options.pollTimeout}),i(`connect ${this.devices[0].ip}:${this.devices[0].port} ok`)}catch(e){i(`connect ${this.devices[0].ip}:${this.devices[0].port} fail`)}}}}}},function(e,t){e.exports=require("events")},function(e,t){e.exports=require("modbus-serial")},function(e,t){e.exports=require("async-lock")},function(e,t){e.exports=require("memory-cache")},function(e,t,s){"use strict";s.r(t);const i=s(3)("ModbusRtuAgent"),n=s(13).default,o=s(6),a={port:"/dev/ttyS1",baud:9600,unitDataEnable:!1,unitDataSize:65535},r={1:"coils",2:"discreteInputs",3:"holdingRegisters",4:"inputRegisters"};t.default=class extends n{constructor(e,t,s=[],i={}){if(super("rtu",e,t,s,Object.assign({},a,i)),this.unitData={},this.options.unitDataEnable){let e=this.options.unitDataSize;this.devices.forEach(t=>{this.unitData[t.slaveId]={coils:new Array(e),discreteInputs:new Array(e),holdingRegisters:new Buffer(2*e).fill(0),inputRegisters:new Buffer(2*e).fill(0)}})}const n=this;this.externalSet=(e,t)=>{n.lock.acquire("port",()=>n._modbusClientWrite(e),{}).then(s=>{n.logger("info",{createdAt:new Date,log:`< ${JSON.stringify(s)}`}),n._pollTable(n.pollTable.filter(t=>t.frame.slaveId==e.slaveId)),t(null,s)}).catch(e=>{n.logger("error",{createdAt:new Date,log:`error: ${e.message}`}),t(e)})}}async start(){try{await this.modbusClient.connectRTU(this.options.port,{baudRate:this.options.baud})}catch(e){return void i(`open port ${this.options.port} fail`)}try{let{pollTable:e,controlTable:t}=o.parseDevices(this.devices);this.pollTable=e,this.controlTable=t}catch(e){return void i("parse devices error:",e.message)}this.pollTable.length&&(i("start"),this._poll()),this.controlTable.length&&this._bind()}_updateUnitData(e,t){if(this.options.unitDataEnable){let s=this.unitData[e.slaveId][r[e.fc]];if(3==e.fc||4==e.fc)t.buffer.copy(s,2*e.address);else{let i=t.data.slice(0,e.quantity);for(let t=e.address;t<e.quantity;t++)s[t]=i[t-e.address]}}}async _pollTable(e){for(let t=0;t<e.length;t++){let s=e[t];try{let e=await this.lock.acquire("port",()=>this._modbusClientWrite(s.frame),{});o.parseRead(s,e).forEach(e=>{this._publishData(e.id,e.value)}),this._publishState(s.frame,!0),this.logger("info",{createdAt:new Date,log:`< ${e.buffer.toString("hex")}`}),this._updateUnitData(s.frame,e)}catch(e){if(this._publishState(s.frame,!1),this.logger("error",{createdAt:new Date,log:`error: ${e.message||e}`}),"Port Not Open"==e.message)break}}}}},function(e,t,s){"use strict";s.r(t);const i=s(3)("ModbusRtuSlave"),n=s(57),o=s(7),a=s(14),r={port:"/dev/ttyS2",baud:9600,eofTimeout:10};t.default=class{constructor(e={},t,s={}){this.requestHandler=a(e,t),this.options=Object.assign({},r,s),this.serial=new n(this.options.port,{baudRate:this.options.baud,autoOpen:!1}),this.slave=null}start(){this.slave=o.createSlave({requestHandler:this.requestHandler,transport:{type:"rtu",eofTimeout:this.options.eofTimeout},listener:{type:"serial",serialPort:this.serial}}),this.slave.listener.on("client",e=>{i("listener#client"),e.on("error",e=>i("client#error: %s",e.stack)),e.on("close",()=>i("client#close")),e.on("data",e=>i("client#data:",e)),e.on("write",e=>i("client#write:",e))})}stop(){this.slave&&this.slave.destroy(!0)}}},function(e,t){e.exports=require("serialport")},function(e,t,s){"use strict";s.r(t);const i=s(3)("ModbusTcpSlave"),n=s(7),o=s(14),a={port:502};t.default=class{constructor(e={},t,s={}){this.requestHandler=o(e,t),this.options=Object.assign({},a,s),this.slave=null}start(){this.slave=n.createSlave({requestHandler:this.requestHandler,transport:new n.IpTransport,listener:new n.TcpListener({serverOptions:{port:this.options.port}})}),this.slave.listener.on("client",e=>{i("listener#client"),e.on("error",e=>i("client#error: %s",e.stack)),e.on("close",()=>i("client#close")),e.on("data",e=>i("client#data:",e)),e.on("write",e=>i("client#write:",e))})}stop(){this.slave&&this.slave.destroy(!0)}}}]);